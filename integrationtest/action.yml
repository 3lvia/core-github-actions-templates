name: Integration Test
description: 'Run .NET integration tests.'
inputs:
  system:
    description: 'System is used to log in to Vault using correct role.'
    required: true
  checkout:
    description: 'If `true`, the action will check out the repository. If `false`, the action will assume the repository has already been checked out.'
    required: false
    default: 'true'
  working-directory:
    description: 'Will run integration tests on projects under this working directory.'
    required: false
    default: './'
  test-projects:
    description: 'Pattern to use to find test projects.'
    required: false
    default: 'integration*test*csproj'
  environment:
    description: 'Environment is used to find correct vault instance.'
    required: true
    default: 'dev'
  slack-channel:
    description: 'Slack channel to notify on failure. Leave empty to disable notifications'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      if: ${{ inputs.checkout == 'true' }}
      uses: actions/checkout@v4

    - name: Parse input and set environment variables
      shell: bash
      run: |
        # parse inputs
        if [[ '${{ inputs.environment }}' == 'dev' ]]; then
          echo 'VAULT_ADDR=https://vault.dev-elvia.io' >> "$GITHUB_ENV"
        elif [[ '${{ inputs.environment }}' == 'test' ]]; then
          echo 'VAULT_ADDR=https://vault.test-elvia.io' >> "$GITHUB_ENV"
        elif [[ '${{ inputs.environment }}' == 'prod' ]]; then
          echo 'VAULT_ADDR=https://vault.elvia.io' >> "$GITHUB_ENV"
        else
          echo 'Unsupported environment: ${{ inputs.environment }}'
          exit 1
        fi

        echo "REPO_SHORT_NAME=${GITHUB_REPOSITORY##*/}" >> "$GITHUB_ENV"

    - name: Login Vault and export token
      uses: hashicorp/vault-action@v3
      with:
        url: ${{ env.VAULT_ADDR }}
        role: 'jwt-github-${{ inputs.system }}-${{ env.REPO_SHORT_NAME }}'
        method: 'jwt'
        path: 'jwt-github'
        exportToken: 'true'

    - name: Validate Vault
      if: failure()
      shell: bash
      run: |
        echo "To access Vault, this repository must be added to https://github.com/3lvia/github-repositories-terraform/tree/trunk/systems"
        exit 1

    - name: Run integration tests
      shell: bash
      run: |
        testprojects=$(find . -ipath '*${{ inputs.test-projects }}')
        if [[ -z $testprojects ]]; then
            echo "Unable to find any dotnet projects matching the pattern ${{ inputs.test-projects }}. Set the pattern using the parameter test-projects."
            exit 1
        else
            echo "Running dotnet test on test projects: $testprojects"
        fi
        for testproject in $testprojects;
        do
          dotnet test -l:trx "$testproject"
        done
      working-directory: ${{ inputs.working-directory }}

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          **/TestResults/*.trx
          .github/**/TestResults/*.trx
        check_name: 'Integration Test Results'

    - name: Notify Slack on Failure
      shell: bash
      if: ${{ failure() && inputs.slack-channel != '' }}
      run: |
        slack_api_token=$(curl --silent -H "X-Vault-Token: $VAULT_TOKEN" ${{ env.VAULT_ADDR }}/v1/shared/kv/data/tokens|jq -r '.data.data."slack-api-token"')
        result=$(curl --silent -d '{"channel": "${{ inputs.slack-channel }}", "text": ":warning: ${{ github.repository }} - ${{ github.ref_name }} feilet. Se https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} for detaljer"}' -H "Content-type: application/json; charset=utf-8" -H "Authorization: Bearer $slack_api_token" "https://slack.com/api/chat.postMessage")
        ok=$(echo $result|jq -r '.ok')
        if [[ $ok == 'true' ]]; then
          echo "Sent message to slack channel ${{ inputs.slack-channel }}."
        else
          error=$(echo $result|jq -r '.error')
          if [[ $error == 'not_in_channel' ]]; then
            echo $'::error::\x40Github Workflow Notifications does not have access to the channel ${{ inputs.slack-channel }}, please add it to the channel.'
          else 
            echo $result|jq '.'
          fi
        fi
