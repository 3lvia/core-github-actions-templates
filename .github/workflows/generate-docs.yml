name: Generate action documentation

on:
  push:
    branches: [trunk]
  pull_request:
    branches: [trunk]

jobs:
  set_env:
    name: Set environment variables
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.set-output.outputs.image_name }}
      image_tag: ${{ steps.set-output.outputs.image_tag }}
    steps:
      - name: Set image tag
        id: set-output
        run: |
          echo 'image_name=ghcr.io/3lvia/core-github-actions-templates/gh-actions-docs' >> $GITHUB_OUTPUT
          if [[ '${{ github.event_name }}' == 'push' ]]; then
            echo 'image_tag=latest' >> $GITHUB_OUTPUT
          else
            echo 'image_tag=${{ github.sha }}' >> $GITHUB_OUTPUT
          fi

  build_docs_image:
    name: Build image for gh-actions-docs
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [set_env]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: 'ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: '.github/gh-actions-docs'
          push: 'true'
          tags: '${{ needs.set_env.outputs.image_name }}:${{ needs.set_env.outputs.image_tag }}'
          cache-from: 'type=registry,ref=${{ needs.set_env.outputs.image_name }}:latest'
          cache-to: 'type=inline'

  generate_docs:
    name: Generate action documentation
    runs-on: ubuntu-latest
    needs: [build_docs_image, set_env]
    container:
      image: '${{ needs.set_env.outputs.image_name }}:${{ needs.set_env.outputs.image_tag }}'
      options: '--user 1001'
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate action documentation
        run: gh-actions-docs
        env:
          IGNORE_FILES: 'my-new-action/action.yml'
          IGNORE_HEADERS: '# core-github-actions-templates,## Table of Contents'
          RUN_PRETTIER: 'true'

      - name: Print README.md for debugging
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          if [[ -z "$(git status --porcelain)" ]]; then
            echo 'No changes to README.md'
          else
            cat README.md
          fi

      - name: Commit changes
        if: github.event_name == 'push'
        shell: bash
        run: |
          if [[ -z "$(git status --porcelain)" ]]; then
            echo 'No changes to commit.'
            exit 0
          fi
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add README.md
          git commit -m 'Update action documentation'
          git push
