name: Test actions

on:
  push:
    branches: [trunk]
  pull_request:
    branches: [trunk]

env:
  APPLICATION_NAME: 'demo-api'
  SYSTEM_NAMESPACE: 'core'

jobs:
  unittests:
    name: Run unit tests
    strategy:
      matrix:
        runner-provider: [gke]
    runs-on: '3lvia-runner-${{ matrix.runner-provider }}-dev'
    permissions:
      contents: read
      checks: write
      issues: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./unittest
        with:
          checkout: 'false'

  analyze:
    name: Run CodeQL analysis
    strategy:
      matrix:
        runner-provider: [gke]
    runs-on: '3lvia-runner-${{ matrix.runner-provider }}-dev'
    if: false # TODO: fix, runs out of space
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./analyze
        with:
          checkout: 'false'

  build:
    name: Build
    strategy:
      matrix:
        runner-provider: [gke]
    runs-on: '3lvia-runner-${{ matrix.runner-provider }}-dev'
    permissions:
      contents: read
      id-token: write
    environment: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./build
        with:
          checkout: 'false'
          name: ${{ env.APPLICATION_NAME }}
          namespace: ${{ env.SYSTEM_NAMESPACE }}
          dockerfile: '.github/test/src/Dockerfile'
          severity: 'CRITICAL'
          AZURE_CLIENT_ID: ${{ vars.ACR_CLIENT_ID }}

  deploy_aks_dev:
    name: Deploy to dev on AKS
    needs: [build]
    strategy:
      matrix:
        runner-provider: [gke]
    runs-on: '3lvia-runner-${{ matrix.runner-provider }}-dev'
    permissions:
      contents: read
      id-token: write
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./deploy
        with:
          checkout: 'false'
          name: ${{ env.APPLICATION_NAME }}
          namespace: ${{ env.SYSTEM_NAMESPACE }}
          environment: 'dev'
          helm-values-path: '.github/test/deploy/values.yaml'
          AZURE_CLIENT_ID: ${{ vars.AKS_CLIENT_ID }}

  deploy_gke_dev:
    name: Deploy to dev on GKE
    needs: [build]
    strategy:
      matrix:
        runner-provider: [gke]
    runs-on: '3lvia-runner-${{ matrix.runner-provider }}-dev'
    permissions:
      contents: read
      id-token: write
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./deploy
        with:
          checkout: 'false'
          name: ${{ env.APPLICATION_NAME }}
          namespace: ${{ env.SYSTEM_NAMESPACE }}
          environment: 'dev'
          helm-values-path: '.github/test/deploy/values.yaml'
          runtime-cloud-provider: 'GKE'
          GC_SERVICE_ACCOUNT: ${{ vars.GC_SERVICE_ACCOUNT }}
          GC_WORKLOAD_IDENTITY_PROVIDER: ${{ vars.GC_WORKLOAD_IDENTITY_PROVIDER }}

  trivy_iac_scan:
    name: Scan IaC with Trivy
    strategy:
      matrix:
        runner-provider: [gke]
    runs-on: '3lvia-runner-${{ matrix.runner-provider }}-dev'
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./trivy-iac-scan
        with:
          checkout: 'false'

  terraform_format_check:
    name: Check Terraform code formatting
    strategy:
      matrix:
        runner-provider: [gke]
    runs-on: '3lvia-runner-${{ matrix.runner-provider }}-dev'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./terraform-format
        with:
          checkout: 'false'
