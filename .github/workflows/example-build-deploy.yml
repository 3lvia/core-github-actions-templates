name: Build and Deploy to Kubernetes

on:
  push:
    branches: [trunk]
# Uncomment to run on pull requests.
# Will also deploy to dev.
#
# pull_request:
#   branches: [trunk]

env:
  APPLICATION_NAME: 'demo-api'
  SYSTEM_NAMESPACE: 'core'
  HELM_VALUES_PATH: '.github/test/deploy/values.yml'
  DOCKERFILE: '.github/test/src/Dockerfile'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      issues: read
      pull-requests: write
    steps:
      - uses: 3lvia/core-github-actions-templates/unittest@trunk
        with:
          test-coverage: 'true'

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      issues: read
      pull-requests: write
      id-token: write
    steps:
      - uses: 3lvia/core-github-actions-templates/integrationtest@trunk
        with:
          system: ${{ env.SYSTEM_NAMESPACE }}

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript-typescript', 'csharp'] # https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning#changing-the-languages-that-are-analyzed
    steps:
      - uses: 3lvia/core-github-actions-templates/analyze@trunk
        with:
          language: ${{ matrix.language }}

  build-scan:
    name: Build and Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: build
    steps:
      - uses: 3lvia/core-github-actions-templates/build@trunk
        with:
          name: ${{ env.APPLICATION_NAME }}
          namespace: ${{ env.SYSTEM_NAMESPACE }}
          dockerfile: ${{ env.DOCKERFILE }}
          AZURE_CLIENT_ID: ${{ vars.ACR_CLIENT_ID }}

  deploy-dev:
    name: Deploy Dev
    needs: [build-scan, unit-tests, integration-tests, analyze]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: dev
    steps:
      - uses: 3lvia/core-github-actions-templates/deploy@trunk
        with:
          name: ${{ env.APPLICATION_NAME }}
          namespace: ${{ env.SYSTEM_NAMESPACE }}
          environment: 'dev'
          helm-values-path: ${{ env.HELM_VALUES_PATH }}
          AZURE_CLIENT_ID: ${{ vars.AKS_CLIENT_ID }}

  deploy-test:
    name: Deploy Test
    needs: [deploy-dev]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: test
    # Only on push to trunk
    if: github.ref == 'refs/heads/trunk'
    steps:
      - uses: 3lvia/core-github-actions-templates/deploy@trunk
        with:
          name: ${{ env.APPLICATION_NAME }}
          namespace: ${{ env.SYSTEM_NAMESPACE }}
          environment: 'test'
          helm-values-path: ${{ env.HELM_VALUES_PATH }}
          AZURE_CLIENT_ID: ${{ vars.AKS_CLIENT_ID }}

  deploy-prod:
    name: Deploy Prod
    needs: [deploy-test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: prod
    # Only on push to trunk
    if: github.ref == 'refs/heads/trunk'
    steps:
      - uses: 3lvia/core-github-actions-templates/deploy@trunk
        with:
          name: ${{ env.APPLICATION_NAME }}
          namespace: ${{ env.SYSTEM_NAMESPACE }}
          environment: 'prod'
          helm-values-path: ${{ env.HELM_VALUES_PATH }}
          AZURE_CLIENT_ID: ${{ vars.AKS_CLIENT_ID }}
