name: Trivy IaC scan
description: 'Uses https://github.com/aquasecurity/trivy-action to scan IaC and report security issues. The action will report any vulnerabilities to GitHub Advanced Security, which will be visible in the Security tab on GitHub.'
inputs:
  path:
    description: 'Path to the directory containing the IaC files.'
    required: false
    default: '.'
  skip-dirs:
    description: 'Comma-separated list of directories to skip.'
    required: false
  severity:
    description: 'Severity levels to scan for. See https://github.com/aquasecurity/trivy-action?tab=readme-ov-file#inputs for more information.'
    required: false
    default: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'
  upload-report:
    description: 'Upload Trivy report to GitHub Security tab. GitHub Advanced Security must be enabled for the repository to use this feature.'
    required: false
    default: 'true'
  checkout:
    description: 'If true, the action will check out the repository. If false, the action will assume the repository has already been checked out.'
    required: false
    default: 'true'
  trivyignore:
    description: "Path to the Trivy ignore file in the repository. This action will add a default set of CVE's that are ignored for all scans. If you wish to add more CVE's to ignore, add them to the .trivyignore, or create a new file and specify the path here. See https://aquasecurity.github.io/trivy/v0.50/docs/configuration/filtering/#by-finding-ids for more information."
    required: false
    default: '.trivyignore'
  debug:
    description: 'If true, the action will output debug information.'
    required: false
    default: 'false'
  policy-bundle-repository:
    description: 'OCI registry URL to retrieve policy bundle from. Maps to `--policy-bundle-repository` in Trivy CLI.'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      if: ${{ inputs.checkout == 'true' }}
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set env
      shell: bash
      run: |
        echo "TRIVY_SARIF=trivy.sarif" >> $GITHUB_ENV

    - name: Set .trivyignore
      shell: bash
      run: |
        # Add default set of CVE's to ignore
        echo "AVD-DS-0026" >> '${{ inputs.trivyignore }}'

    - name: Install cosign
      uses: sigstore/cosign-installer@v3.5.0

    - name: Install Trivy
      shell: bash
      run: |
        # Install Trivy
        trivy_tarball="trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz"
        trivy_checksums="trivy_${TRIVY_VERSION}_checksums.txt"

        trivy_tmp="$(mktemp -d)"
        cd "$trivy_tmp" || exit 1

        printf "Downloading Trivy v%s...\n" "$TRIVY_VERSION"
        wget -q "https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_VERSION/$trivy_tarball"
        wget -q "https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_VERSION/$trivy_tarball.sig"
        wget -q "https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_VERSION/$trivy_tarball.pem"
        printf "Done.\n\n"

        printf "Verifying signature...\n"
        cosign verify-blob "$trivy_tarball" \
            --certificate "$trivy_tarball.pem" \
            --signature "$trivy_tarball.sig" \
            --certificate-identity-regexp 'https://github\.com/aquasecurity/trivy/\.github/workflows/.+' \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com"
        printf "Done.\n\n"

        printf "Downloading checksums...\n"
        wget -q "https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_VERSION/$trivy_checksums"
        wget -q "https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_VERSION/$trivy_checksums.sig"
        wget -q "https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_VERSION/$trivy_checksums.pem"
        printf "Done.\n\n"

        printf "Verifying checksums signature...\n"
        cosign verify-blob "$trivy_checksums" \
            --certificate "$trivy_checksums.pem" \
            --signature "$trivy_checksums.sig" \
            --certificate-identity-regexp 'https://github\.com/aquasecurity/trivy/\.github/workflows/.+' \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com"
        printf "Done.\n\n"

        printf "Verifying checksums...\n"
        grep "$trivy_tarball" "$trivy_checksums" | sha256sum -c
        printf "Done.\n\n"

        printf "Installing Trivy v%s...\n" "$TRIVY_VERSION"
        tar -xzf "$trivy_tarball"
        sudo install -m 755 trivy /usr/local/bin
        printf "Done.\n\n"
      env:
        TRIVY_VERSION: '0.50.4'

    - name: Run Trivy vulnerability scanner in IaC mode
      shell: bash
      run: |
        # Run Trivy
        trivy config '${{ inputs.path }}' \
          --format sarif \
          --output '${{ env.TRIVY_SARIF }}' \
          --exit-code 0 \
          --severity '${{ inputs.severity }}' \
          --ignorefile '${{ inputs.trivyignore }}' \
          ${{ inputs.policy-bundle-repository != '' && format('--policy-bundle-repository {0}', inputs.policy-bundle-repository) || '' }} \
          ${{ inputs.debug == 'true' && '--debug' || '' }} \
          ${{ inputs.skip-dirs != '' && format('--skip-dirs {0}', inputs.skip-dirs) || '' }}

    - name: Upload Trivy report to GitHub Security tab
      if: ${{ inputs.upload-report == 'true' }}
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ env.TRIVY_SARIF }}
        category: 'Trivy'
