name: Playwright Test
description: 'Run Playwright tests written in .NET.'
inputs:
  test-project:
    description: 'Name of test project file to run'
    required: true
  environment:
    description: 'Environment is used to find correct Vault instance.'
    required: true
  system:
    description: 'System is used to log in to Vault using correct role.'
    required: true
  checkout:
    description: 'If `true`, the action will check out the repository. If `false`, the action will assume the repository has already been checked out.'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      if: ${{ inputs.checkout == 'true' }}
      uses: actions/checkout@v4

    - name: Parse input and set environment variables
      shell: bash
      run: |
        if [[ '${{ inputs.environment }}' == 'dev' ]]; then
          echo 'VAULT_ADDR=https://vault.dev-elvia.io' >> "$GITHUB_ENV"
        elif [[ '${{ inputs.environment }}' == 'test' ]]; then
          echo 'VAULT_ADDR=https://vault.test-elvia.io' >> "$GITHUB_ENV"
        elif [[ '${{ inputs.environment }}' == 'prod' ]]; then
          echo 'VAULT_ADDR=https://vault.elvia.io' >> "$GITHUB_ENV"
        else
          echo 'Unsupported environment: ${{ inputs.environment }}'
          exit 1
        fi

        echo "REPO_SHORT_NAME=${GITHUB_REPOSITORY##*/}" >> "$GITHUB_ENV"

    - name: Login Vault and export token
      uses: hashicorp/vault-action@v3
      with:
        url: ${{ env.VAULT_ADDR }}
        role: 'jwt-github-${{ inputs.system }}-${{ env.REPO_SHORT_NAME }}'
        method: 'jwt'
        path: 'jwt-github'
        exportToken: 'true'

    - name: Build .NET project
      shell: bash
      run: dotnet build ${{ inputs.test-project }}

    - name: Install playwright
      shell: pwsh
      run: |
        $dirName = [System.IO.Path]::GetDirectoryName("${{ inputs.test-project }}")
        $playwrightscript = Get-ChildItem -Path $dirName -Filter playwright.ps1 -Recurse -ErrorAction SilentlyContinue -Force
        &$playwrightscript.FullName install

    - name: Run .NET tests
      shell: bash
      run: dotnet test -l:trx ${{ inputs.test-project }}

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          **/TestResults/*.trx
          .github/**/TestResults/*.trx
        check_name: 'Smoketest Results'
